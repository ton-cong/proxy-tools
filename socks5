#!/bin/bash
# SOCKS5 (Dante) Installer & Manager for Amazon Linux 2023/2 (EC2)
# Features: Install, Reconfigure, Add User, Uninstall
# Author: ChatGPT GPT-5

# ========== COLOR CODES ==========
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# ========== URL ENCODE FUNCTION ==========
url_encode() {
    local raw="$1"
    local encoded=""
    for (( i=0; i<${#raw}; i++ )); do
        char="${raw:i:1}"
        case "$char" in
            [a-zA-Z0-9._~-]) encoded+="$char" ;;
            *) encoded+=$(printf '%%%02X' "'$char") ;;
        esac
    done
    echo "$encoded"
}

# ========== CHECK EXISTING INSTALLATION ==========
if command -v danted &>/dev/null; then
    echo -e "${GREEN}Dante SOCKS5 server is already installed.${NC}"
    echo -e "${CYAN}Do you want to (1) Reconfigure, (2) Add a new user, (3) Uninstall, or (4) Exit?${NC}"
    read -p "Enter choice (1-4): " choice
    case "$choice" in
        1)
            read -p "$(echo -e ${CYAN}Enter port (default: 1080):${NC} )" port
            port=${port:-1080}
            ;;
        2)
            add_user=true
            ;;
        3)
            echo -e "${YELLOW}Uninstalling Dante SOCKS5...${NC}"
            sudo systemctl stop danted
            sudo systemctl disable danted
            sudo dnf remove -y dante-server || sudo yum remove -y dante-server
            sudo rm -f /etc/danted.conf /var/log/danted.log
            echo -e "${GREEN}Uninstalled successfully.${NC}"
            exit 0
            ;;
        4|*) echo -e "${YELLOW}Exit.${NC}"; exit 0 ;;
    esac
else
    echo -e "${YELLOW}Dante SOCKS5 is not installed.${NC}"
    read -p "$(echo -e ${CYAN}Enter port (default: 1080):${NC} )" port
    port=${port:-1080}
    reconfigure=true
    add_user=true
fi

# ========== INSTALL / RECONFIGURE ==========
if [[ "$reconfigure" == "true" || "$choice" == "1" ]]; then
    echo -e "${CYAN}Installing Dante SOCKS5...${NC}"
    sudo dnf update -y || sudo yum update -y
    sudo dnf install -y dante-server curl || sudo yum install -y dante-server curl

    echo -e "${GREEN}Installed successfully.${NC}"
    sudo touch /var/log/danted.log
    sudo chown nobody:nobody /var/log/danted.log || sudo chown nobody:nogroup /var/log/danted.log

    # Detect main network interface
    primary_interface=$(ip route | awk '/default/ {print $5}' | head -n1)
    if [[ -z "$primary_interface" ]]; then
        echo -e "${RED}Could not detect network interface.${NC}"
        exit 1
    fi

    # Generate config
    sudo bash -c "cat > /etc/danted.conf" <<EOF
logoutput: /var/log/danted.log
internal: 0.0.0.0 port = $port
external: $primary_interface
method: username
user.privileged: root
user.notprivileged: nobody

client pass {
    from: 0.0.0.0/0 to: 0.0.0.0/0
    log: connect disconnect error
}
socks pass {
    from: 0.0.0.0/0 to: 0.0.0.0/0
    log: connect disconnect error
}
EOF

    # Open firewall port if firewalld is running
    if systemctl is-active --quiet firewalld; then
        sudo firewall-cmd --permanent --add-port=${port}/tcp
        sudo firewall-cmd --reload
    else
        sudo iptables -I INPUT -p tcp --dport "$port" -j ACCEPT
    fi

    sudo systemctl enable danted
    sudo systemctl restart danted

    if systemctl is-active --quiet danted; then
        echo -e "${GREEN}SOCKS5 is running on port ${port}.${NC}"
    else
        echo -e "${RED}Failed to start SOCKS5 server. Check /var/log/danted.log.${NC}"
        exit 1
    fi
fi

# ========== ADD USER ==========
if [[ "$add_user" == "true" ]]; then
    echo -e "${CYAN}Enter username:${NC}"
    read username
    echo -e "${CYAN}Enter password:${NC}"
    read -s password

    if id "$username" &>/dev/null; then
        echo -e "${YELLOW}User exists. Updating password...${NC}"
    else
        sudo useradd --shell /sbin/nologin "$username"
        echo -e "${GREEN}User created.${NC}"
    fi
    echo "$username:$password" | sudo chpasswd
    echo -e "${GREEN}Password updated.${NC}"
fi

# ========== TEST PROXY ==========
if [[ "$add_user" == "true" ]]; then
    echo -e "${CYAN}Testing SOCKS5 proxy...${NC}"
    proxy_ip=$(hostname -I | awk '{print $1}')
    encoded_username=$(url_encode "$username")
    encoded_password=$(url_encode "$password")

    curl -x socks5://"$encoded_username":"$encoded_password"@"$proxy_ip":"$port" https://ipinfo.io/

    if [[ $? -eq 0 ]]; then
        echo -e "${GREEN}Proxy test successful.${NC}"
    else
        echo -e "${RED}Proxy test failed. Check configuration.${NC}"
    fi
fi
